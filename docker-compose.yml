services:
  api:
    environment:
      # Pass environment variables to container from shell
      - APL_GOLF_LEAGUE_API_DATABASE_CONNECTOR
      - APL_GOLF_LEAGUE_API_DATABASE_USER
      - APL_GOLF_LEAGUE_API_DATABASE_PASSWORD
      - APL_GOLF_LEAGUE_API_DATABASE_URL
      - APL_GOLF_LEAGUE_API_DATABASE_PORT
      - APL_GOLF_LEAGUE_API_DATABASE_NAME
      - APL_GOLF_LEAGUE_API_DATABASE_ECHO
      - APL_GOLF_LEAGUE_API_ACCESS_TOKEN_SECRET_KEY
      - APL_GOLF_LEAGUE_API_ACCESS_TOKEN_ALGORITHM
      - APL_GOLF_LEAGUE_API_ACCESS_TOKEN_EXPIRE_MINUTES
    build: ./
    restart: always
    volumes:
      - ./logs:/logs
    labels:
      # Enable Traefik for this specific service
      - traefik.enable=true
      # Define the port inside of the Docker service to use
      - traefik.http.services.app.loadbalancer.server.port=80
      # Make Traefik use this domain in HTTP
      - traefik.http.routers.app-http.entrypoints=http
      - traefik.http.routers.app-http.rule=Host(`${APL_GOLF_LEAGUE_API_URL?Variable not set}`)
      # Use the traefik-public network (declared below)
      - traefik.docker.network=traefik-public
      # Make Traefik use this domain in HTTPS
      - traefik.http.routers.app-https.entrypoints=https
      - traefik.http.routers.app-https.rule=Host(`${APL_GOLF_LEAGUE_API_URL?Variable not set}`)
      - traefik.http.routers.app-https.tls=true
      # Use the "le" (Let's Encrypt) resolver
      - traefik.http.routers.app-https.tls.certresolver=le
      # https-redirect middleware to redirect HTTP to HTTPS
      - traefik.http.middlewares.https-redirect.redirectscheme.scheme=https
      - traefik.http.middlewares.https-redirect.redirectscheme.permanent=true
      # Middleware to redirect HTTP to HTTPS
      - traefik.http.routers.app-http.middlewares=https-redirect
    networks:
      # Use the public network created to be shared between Traefik and
      # any other service that needs to be publicly available with HTTPS
      - traefik-public

networks:
  traefik-public:
    external: true
