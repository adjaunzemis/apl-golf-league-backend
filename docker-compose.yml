version: '3.7'

services:
  postgresql:
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_USER=${APL_GOLF_LEAGUE_API_DATABASE_USER?Variable not set}
      - POSTGRES_PASSWORD=${APL_GOLF_LEAGUE_API_DATABASE_USER?Variable not set}
    logging:
      options:
        max-size: 10m
        max-file: "3"
    ports:
      - '${APL_GOLF_LEAGUE_API_DATABASE_PORT_EXTERNAL?Variable not set}:${APL_GOLF_LEAGUE_API_DATABASE_PORT_INTERNAL?Variable not set}'
    volumes: 
      - ./database/postgresql/data:/var/lib/postgresql/data
      # copy scripts to create/fill tables (if not already initialized)
      - ./database/postgresql/aplgldb-create-tables.20221201.sql:/docker-entrypoint-initdb.d/create_tables.sql
      - ./database/postgresql/aplgldb-fill-tables.20221201.sql:/docker-entrypoint-initdb.d/fill_tables.sql
    networks:
      - postgres-private

  api:
    environment:
      # Pass environment variables to container from shell
      - APL_GOLF_LEAGUE_API_DATABASE_CONNECTOR
      - APL_GOLF_LEAGUE_API_DATABASE_USER
      - APL_GOLF_LEAGUE_API_DATABASE_PASSWORD
      - APL_GOLF_LEAGUE_API_DATABASE_URL
      - APL_GOLF_LEAGUE_API_DATABASE_PORT_EXTERNAL
      - APL_GOLF_LEAGUE_API_DATABASE_PORT_INTERNAL
      - APL_GOLF_LEAGUE_API_DATABASE_NAME
      - APL_GOLF_LEAGUE_API_DATABASE_ECHO
      - APL_GOLF_LEAGUE_API_ACCESS_TOKEN_SECRET_KEY
      - APL_GOLF_LEAGUE_API_ACCESS_TOKEN_ALGORITHM
      - APL_GOLF_LEAGUE_API_ACCESS_TOKEN_EXPIRE_MINUTES
    build: ./
    restart: always
    depends_on:
      - postgresql
    volumes:
      - ./logs:/logs
    labels:
      # Enable Traefik for this specific service
      - traefik.enable=true
      # Define the port inside of the Docker service to use
      - traefik.http.services.app.loadbalancer.server.port=80
      # Make Traefik use this domain in HTTP
      - traefik.http.routers.app-http.entrypoints=http
      - traefik.http.routers.app-http.rule=Host(`${APL_GOLF_LEAGUE_API_URL?Variable not set}`)
      # Use the traefik-public network (declared below)
      - traefik.docker.network=traefik-public
      # Make Traefik use this domain in HTTPS
      - traefik.http.routers.app-https.entrypoints=https
      - traefik.http.routers.app-https.rule=Host(`${APL_GOLF_LEAGUE_API_URL?Variable not set}`)
      - traefik.http.routers.app-https.tls=true
      # Use the "le" (Let's Encrypt) resolver
      - traefik.http.routers.app-https.tls.certresolver=le
      # https-redirect middleware to redirect HTTP to HTTPS
      - traefik.http.middlewares.https-redirect.redirectscheme.scheme=https
      - traefik.http.middlewares.https-redirect.redirectscheme.permanent=true
      # Middleware to redirect HTTP to HTTPS
      - traefik.http.routers.app-http.middlewares=https-redirect
    networks:
      - postgres-private
      # Use the public network created to be shared between Traefik and
      # any other service that needs to be publicly available with HTTPS
      - traefik-public

networks:
  postgres-private:
    external: false
  traefik-public:
    external: true
