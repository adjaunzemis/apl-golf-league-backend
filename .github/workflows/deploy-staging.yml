name: Deploy API to Digital Ocean (Staging)

on:
  push:
    tags:
        - "t*.*.*"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  check-formatting:
    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.12"

      - name: Check formatting
        uses: pre-commit/action@v3.0.1

  run-tests:
    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip uv
          uv sync --dev

      - name: Run tests
        run: |
          python -m pytest .

  build-staging:
    runs-on: ubuntu-latest
    needs:
      - check-formatting
      - run-tests

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Extract tag name
        id: get_tag
        run: echo "TAG_NAME=${GITHUB_REF##*/}" >> $GITHUB_ENV

      # TODO: Update in-code version to match tag

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy-staging:
    runs-on: ubuntu-latest
    needs:
      - build-staging

    permissions:
      contents: read
      packages: read

    steps:
      - name: Deploy to DigitalOcean Droplet
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          port: ${{ secrets.SERVER_PORT }}
          username: ${{ secrets.SERVER_USERNAME}}
          key: ${{ secrets.SERVER_KEY }}
          script: |
            cd ~/apl-golf-league-backend

            echo ${{ secrets.GITHUB_TOKEN }} | docker login ${{ env.REGISTRY }} -u ${{ github.actor }} --password-stdin
            docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}

            if grep -q "^IMAGE_TAG=" ".env.staging"; then
                sed -i.bak "s/^IMAGE_TAG=.*/IMAGE_TAG=${{ github.ref_name }}/" ".env.staging"
                echo "Updated IMAGE_TAG to ${{ github.ref_name }} in .env.staging"
            else
                echo "IMAGE_TAG not found in .env.staging. Adding it with value ${{ github.ref_name }}"
                echo "IMAGE_TAG=${{ github.ref_name }}" >> ".env.staging"
            fi

            echo Deploying to staging environment...
            ./deploy-staging.sh

            echo Successfully deployed ${{ github.ref_name }} to staging environment!
